automation:
  - id: unifi_protect_person_detected_bins
    mode: single
    alias: Send message when person detected Bins
    description: 'record and send a video when person seen'
    trigger:
    - platform: state
      entity_id: binary_sensor.motion_bins
      to: person
      attribute: event_object
    variables:
      # This code was used when I had one automation that covered all cameras, so it had to know which camera was triggered    
      cam_name: "{{ 'camera.' + trigger.entity_id.split('_')[2] }}"
      pic_file: "{{ trigger.entity_id.split('_')[2]  + '_' + now().strftime('%d%m%H%M') }}"
      pic_folder: "/config/www/cam_snaps/"      
    action:
      - service: input_text.set_value
        data:
          entity_id: input_text.camera_bins_object_detected
          value: "{{ trigger.to_state.attributes.event_object }}"    
      - service: camera.record
        data:
          duration: 10
          entity_id: "{{ cam_name }}"
          filename: "{{ pic_folder + pic_file }}.mp4"    
      - service: telegram_bot.send_message
        data:
          target: !secret telegram_chat_id_bruce_and_sarah     
          message_tag: object_detected_bins        
          message: >
            I have seen a {{ trigger.to_state.attributes.event_object }} on the {{ trigger.entity_id.split('_')[2] }} camera.
            
            Recording 10 Seconds........

      - wait_template: >
          {% set filename = pic_folder + pic_file + '.mp4' %}{{ filename in states.sensor.cam_snaps.attributes.file_list }}
        timeout: '00:00:20'
      - service: telegram_bot.edit_message
        data:
          message_id: "{{ states('input_text.object_detected_bins_message_id') }}"
          chat_id: !secret telegram_chat_id_bruce_and_sarah         
          message: "I have seen a {{ trigger.to_state.attributes.event_object }} on the {{ trigger.entity_id.split('_')[2] }} camera."
          inline_keyboard:
            - 'Show Video:/vdd_{{pic_file}}, OK:/remove_keyboard'      
      - delay: 00:05:00
      - service: input_text.set_value
        data:
          entity_id: input_text.camera_bins_object_detected
          value: ""          