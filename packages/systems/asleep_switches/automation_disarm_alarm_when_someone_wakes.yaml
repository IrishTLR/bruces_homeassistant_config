automation:
  - id: disarm_alarm_when_somone_wakes
    alias: 'Disarm the alarm when someone wakes up'
    
    description: >
      If input boolean changes to off disarm the alarm
      
    trigger:
      - platform: state
        entity_id: 
          - input_boolean.bruce_is_asleep
          - input_boolean.sarah_is_asleep
        from: 'on'
        to: 'off'
        
    action:
      - choose:
          - conditions: >
              {{ is_state('alarm_control_panel.full_set','armed_night') and trigger.entity_id=='input_boolean.bruce_is_asleep'}}
            sequence:
              - service: input_text.set_value
                target:
                  entity_id: input_text.alarm_user
                data:
                  value: 'Bruce'
              - service: telegram_bot.send_message
                data:
                  target: !secret telegram_chat_id_bruce
                  message: "Alarm disarming.............."
                  message_tag: alarm_disarming                  
              - service: alarm_control_panel.alarm_disarm 
                target:
                  entity_id: alarm_control_panel.full_set
                data:
                  code: !secret alarm_code
              - wait_template: "{{ is_state('alarm_control_panel.full_set','disarmed') }}"
                timeout: 00:00:05
              - service: telegram_bot.edit_message
                data:
                  chat_id: !secret telegram_chat_id_bruce
                  message_id: "{{ states('input_text.alarm_disarming_message_id') }}"                     
                  message: "Alarm is now {{states('alarm_control_panel.full_set').replace('_',' ')}}"    
          - conditions: >
              {{ is_state('alarm_control_panel.full_set','armed_night') and trigger.entity_id=='input_boolean.sarah_is_asleep'}}
            sequence:
              - service: input_text.set_value
                target:
                  entity_id: input_text.alarm_user
                data:
                  value: 'Sarah'
              - service: telegram_bot.send_message
                data:
                  target: !secret telegram_chat_id_sarah
                  message: "Alarm disarming.............."
                  message_tag: alarm_disarming                  
              - service: alarm_control_panel.alarm_disarm 
                target:
                  entity_id: alarm_control_panel.full_set
                data:
                  code: !secret alarm_code
              - wait_template: "{{ is_state('alarm_control_panel.full_set','disarmed') }}"
                timeout: 00:00:05
              - service: telegram_bot.edit_message
                data:
                  chat_id: !secret telegram_chat_id_sarah
                  message_id: "{{ states('input_text.alarm_disarming_message_id') }}"                     
                  message: "Alarm is now {{states('alarm_control_panel.full_set').replace('_',' ')}}"
          - conditions: >
              {{ trigger.entity_id=='input_boolean.bruce_is_asleep'}}
            sequence:
              - service: telegram_bot.send_message
                data:
                  target: !secret telegram_chat_id_bruce
                  message_id: "{{ states('input_text.alarm_disarming_message_id') }}"                     
                  message: "Alarm is now {{states('alarm_control_panel.full_set').replace('_',' ')}}"
          - conditions: >
              {{  trigger.entity_id=='input_boolean.sarah_is_asleep'}}
            sequence:
              - service: telegram_bot.edit_message
                data:
                  target: !secret telegram_chat_id_sarah
                  message_id: "{{ states('input_text.alarm_disarming_message_id') }}"                     
                  message: "Alarm is now {{states('alarm_control_panel.full_set').replace('_',' ')}}"